[{"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\KeebPhotosUpdatePage\\index.js":"1","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebPhotoGallery\\index.js":"2","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\ViewKeebList\\index.js":"3","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebUpdateForm\\index.js":"4","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\KeebUpdatePage\\index.js":"5","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\UpdateProfile\\index.js":"6","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SignUpForm\\index.js":"7","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SnackbarAlert\\index.js":"8","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\SignInPage\\index.js":"9","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SignInForm\\index.js":"10","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\UpdateProfileForm\\index.js":"11","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\utils\\API.js":"12","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebCard\\index.js":"13","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\HomePage\\index.js":"14","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\contexts\\ProfileContext\\index.js":"15","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebImageStepper\\index.js":"16","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\index.js":"17","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\AddPartsForm\\index.js":"18","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AddKeebPage\\index.js":"19","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AddPartsPage\\index.js":"20","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\AddKeebForm\\index.js":"21","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\App.js":"22","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\NavBar\\index.js":"23","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AboutPage\\index.js":"24","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\ProfileCard\\index.js":"25","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\ProfilePage\\index.js":"26","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SearchKeebInput\\index.js":"27","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\Footer\\index.js":"28"},{"size":2243,"mtime":1622839337614,"results":"29","hashOfConfig":"30"},{"size":3786,"mtime":1623200491095,"results":"31","hashOfConfig":"30"},{"size":5816,"mtime":1623201506414,"results":"32","hashOfConfig":"30"},{"size":9998,"mtime":1623201615526,"results":"33","hashOfConfig":"30"},{"size":7180,"mtime":1623107163194,"results":"34","hashOfConfig":"30"},{"size":4518,"mtime":1623106877039,"results":"35","hashOfConfig":"30"},{"size":5180,"mtime":1623201859051,"results":"36","hashOfConfig":"30"},{"size":5887,"mtime":1623265713170,"results":"37","hashOfConfig":"30"},{"size":1871,"mtime":1623098227979,"results":"38","hashOfConfig":"30"},{"size":4513,"mtime":1623201835614,"results":"39","hashOfConfig":"30"},{"size":5893,"mtime":1623201653631,"results":"40","hashOfConfig":"30"},{"size":12184,"mtime":1623108100409,"results":"41","hashOfConfig":"30"},{"size":11422,"mtime":1623271820271,"results":"42","hashOfConfig":"30"},{"size":3501,"mtime":1623271928240,"results":"43","hashOfConfig":"30"},{"size":1865,"mtime":1620763204608,"results":"44","hashOfConfig":"30"},{"size":3184,"mtime":1623200710605,"results":"45","hashOfConfig":"30"},{"size":163,"mtime":1606348114948,"results":"46","hashOfConfig":"30"},{"size":4796,"mtime":1623201751374,"results":"47","hashOfConfig":"30"},{"size":2569,"mtime":1623104047985,"results":"48","hashOfConfig":"30"},{"size":2853,"mtime":1623104177277,"results":"49","hashOfConfig":"30"},{"size":4018,"mtime":1623201726383,"results":"50","hashOfConfig":"30"},{"size":1995,"mtime":1623200341923,"results":"51","hashOfConfig":"30"},{"size":6088,"mtime":1623275134010,"results":"52","hashOfConfig":"30"},{"size":1421,"mtime":1623112006895,"results":"53","hashOfConfig":"30"},{"size":3571,"mtime":1623201528262,"results":"54","hashOfConfig":"30"},{"size":811,"mtime":1623185640359,"results":"55","hashOfConfig":"30"},{"size":4982,"mtime":1623272053558,"results":"56","hashOfConfig":"30"},{"size":569,"mtime":1623200371583,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"1espzfp",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\KeebPhotosUpdatePage\\index.js",["120"],"// React\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n// API\r\nimport API from '../../utils/API'\r\n// Components\r\nimport KeebPhotoGallery from '../../components/KeebPhotoGallery'\r\n// Contexts\r\nimport { useProfile, useProfileData } from '../../contexts/ProfileContext'\r\n\r\nexport default function KeebPhotosUpdatePage() {\r\n    const profile = useProfile()\r\n    const profileData = useProfileData()\r\n    const [keeb, setKeeb] = useState(null)\r\n    const [keebPhotos, setKeebPhotos] = useState({\r\n        photos: []\r\n    })\r\n\r\n    const { id } = useParams()\r\n    let uploadedPhotos = []\r\n\r\n    useEffect(() => {\r\n        profileData()\r\n        fetchKeebData()\r\n    }, [])\r\n\r\n    function fetchKeebData() {\r\n        // Get Keeb Info\r\n        API.getOneKeeb(id).then(res => {\r\n            setKeeb(res)\r\n        })\r\n        // Get Keeb Photos\r\n        API.getAllPhotos(id).then(res => {\r\n            setKeebPhotos({\r\n                photos: res\r\n            })\r\n        })\r\n    }\r\n    // Opens Cloudinary Widget\r\n    const showWidget = () => {\r\n        myWidget.open()\r\n    }\r\n    // Cloudinary Widget\r\n    const myWidget = window.cloudinary.createUploadWidget({\r\n        cloudName: 'jsk321',\r\n        uploadPreset: 'keebs_setups'\r\n    }, (error, result) => {\r\n        if (!error && result && result.event === 'success') {\r\n            let photo = {image: result.info.url, KeebId: id}\r\n            API.uploadKeebPhotos(profile.token, photo).then(res => {\r\n                uploadedPhotos.push(res)\r\n                let allPhotos = keebPhotos.photos.concat(uploadedPhotos)\r\n                setKeebPhotos({\r\n                    photos: allPhotos\r\n                })\r\n            })\r\n        }\r\n    })\r\n\r\n    const handleRemoveBtn = event => {\r\n        event.preventDefault()\r\n        let id = event.currentTarget.id\r\n        API.deletePhoto(profile.token, id).then(res => {\r\n            window.location.reload()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <KeebPhotoGallery\r\n                keeb={keeb}\r\n                photos={keebPhotos.photos}\r\n                showWidget={showWidget}\r\n                handleRemoveBtn={handleRemoveBtn}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n",["121","122"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebPhotoGallery\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\ViewKeebList\\index.js",["123","124","125"],"// React\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n// API\r\nimport API from '../../utils/API'\r\n// Components\r\nimport LoadingCircle from '../../components/LoadingCircle'\r\nimport SnackbarAlert from '../../components/SnackbarAlert'\r\n// Contexts\r\nimport { useProfile, useProfileData } from '../../contexts/ProfileContext'\r\n// Material-UI Components\r\nimport { Avatar, Card, List, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, IconButton, Tooltip, Typography } from '@material-ui/core'\r\n// Material-UI Icons\r\nimport PhotoIcon from '@material-ui/icons/Photo'\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote'\r\n// Material-UI Styles\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nconst useStyles = makeStyles({\r\n    updateKeebLink: {\r\n        textDecoration: \"none\",\r\n        color: \"#747C8C\",\r\n    },\r\n    keebListDiv: {\r\n        dispaly: 'flex',\r\n        flexDirection: \"column\",\r\n        width: '100%',\r\n        height: \"510px\",\r\n        backgroundColor: \"#0B0B0D\",\r\n        color: \"#747C8C\"\r\n    },\r\n    keebList: {\r\n        height: '400px',\r\n        overflow: \"auto\"\r\n    },\r\n    keebIcon: {\r\n        color: '#747C8C',\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n})\r\n\r\nexport default function ViewKeebList(props) {\r\n    const classes = useStyles()\r\n    const profile = useProfile()\r\n    const profileData = useProfileData()\r\n\r\n    const [open, setOpen] = useState({\r\n        sound: false,\r\n    });\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            setOpen({\r\n                sound: false,\r\n            });\r\n            return;\r\n        }\r\n        setOpen({\r\n            sound: false,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        profileData()\r\n    }, [])\r\n\r\n    const handleUploadSoundBtn = event => {\r\n        event.preventDefault()\r\n        let id = event.currentTarget.id\r\n        document.getElementById(`sound${id}`).click()\r\n    }\r\n\r\n    const handleSoundTest = async event => {\r\n        event.preventDefault()\r\n        let id = event.currentTarget.id.slice(5)\r\n        const files = event.target.files[0]\r\n        const audio = new FormData()\r\n        audio.append('file', files)\r\n        audio.append('upload_preset', 'keebs_setups')\r\n        const res = await API.uploadAudio(audio)\r\n        const file = await res\r\n        API.updateSound(profile.token, id, file.secure_url).then(res => {\r\n            console.log(res)\r\n            setOpen({\r\n                sound: true\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.keebListDiv}>\r\n            <h2 style={{ textAlign: 'center' }}>Keebs</h2>\r\n            <List className={classes.keebList}>\r\n                {profile !== null ?\r\n                    profile.keebs.map(res => (\r\n                        <ListItem key={res.id}>\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    style={{ backgroundColor: \"transparent\"}}\r\n                                >\r\n                                    <Tooltip title={`Update photos`} arrow>\r\n                                        <IconButton\r\n                                            className={classes.keebIcon}\r\n                                            onClick={() => window.location.href = `/updatekeeb/photos/${res.id}`}\r\n                                        >\r\n                                            <PhotoIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={\r\n                                    <>\r\n                                        <Tooltip title={`Update parts`} arrow>\r\n                                            <Link to={`/updatekeeb/${res.id}`} className={classes.updateKeebLink}>\r\n                                                <strong>{res.maker} {res.name}</strong>\r\n                                            </Link>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                }\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    className={classes.input}\r\n                                    id={`sound${res.id}`}\r\n                                    onChange={handleSoundTest}\r\n                                />\r\n                                <label htmlFor={`sound${res.id}`}>\r\n                                    <Tooltip title={`Upload sound test`} arrow>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            aria-label=\"sound test\"\r\n                                            id={res.id}\r\n                                            onClick={handleUploadSoundBtn}\r\n                                            style={{color: \"#747C8C\"}}\r\n                                        >\r\n                                            <MusicNoteIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </label>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    ))\r\n                    :\r\n                    null\r\n                }\r\n            </List>\r\n            <SnackbarAlert\r\n                open={open}\r\n                handleClose={handleClose}\r\n            />\r\n        </Card >\r\n    )\r\n}",["126","127"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebUpdateForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\KeebUpdatePage\\index.js",["128","129"],"// React\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n// API\r\nimport API from \"../../utils/API\"\r\n// Components\r\nimport KeebUpdateForm from '../../components/KeebUpdateForm'\r\nimport SnackbarAlert from '../../components/SnackbarAlert'\r\n// Context\r\nimport { useProfile, useProfileData } from '../../contexts/ProfileContext'\r\nimport { Snackbar } from '@material-ui/core'\r\n\r\nexport default function KeebUpdatePage() {\r\n    // Profile Context\r\n    const profile = useProfile()\r\n    const profileData = useProfileData()\r\n\r\n    const [updateKeeb, setUpdateKeeb] = useState({\r\n        keebId: \"\",\r\n        name: \"\",\r\n        maker: \"\",\r\n        color: \"\",\r\n        plate: \"\",\r\n        keebImage: \"\",\r\n        switches: \"\",\r\n        switchLube: \"\",\r\n        springWeight: \"\",\r\n        springLube: \"\",\r\n        switchFilm: \"\",\r\n        stabs: \"\",\r\n        stabLube: \"\",\r\n        keyset: \"\"\r\n    })\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [open, setOpen] = useState({\r\n        parts: false,\r\n        confirm: false,\r\n        deleted: false,\r\n    });\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        profileData()\r\n        loadKeeb()\r\n    }, [])\r\n\r\n    function loadKeeb() {\r\n        API.getOneKeeb(id).then(keebData => {\r\n            if (keebData) {\r\n                setUpdateKeeb({\r\n                    keebId: id,\r\n                    name: keebData.name,\r\n                    maker: keebData.maker,\r\n                    color: keebData.color,\r\n                    plate: keebData.plate,\r\n                    keebImage: keebData.keebImage,\r\n                    switches: keebData.Parts[0].switches,\r\n                    switchLube: keebData.Parts[0].switchLube,\r\n                    springWeight: keebData.Parts[0].springWeight,\r\n                    springLube: keebData.Parts[0].springLube,\r\n                    switchFilm: keebData.Parts[0].switchFilm,\r\n                    stabs: keebData.Parts[0].stabs,\r\n                    stabLube: keebData.Parts[0].stabLube,\r\n                    keyset: keebData.Parts[0].keyset\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n        setUpdateKeeb({\r\n            ...updateKeeb,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            setOpen({\r\n                ...open,\r\n                parts: false,\r\n                confirm: false,\r\n                deleted: false,\r\n            });\r\n            window.location.href = '/profile'\r\n        }\r\n        setOpen({\r\n            ...open,\r\n            parts: false,\r\n            confirm: false,\r\n            deleted: false,\r\n        });\r\n        window.location.href = '/profile'\r\n    };\r\n\r\n    const handleConfirm = event => {\r\n        event.preventDefault()\r\n        API.deleteParts(profile.token, id)\r\n        API.deleteKeeb(profile.token, id).then(res => {\r\n            setOpen({\r\n                ...open,\r\n                parts: false,\r\n                confirm: false,\r\n                deleted: false,\r\n            })\r\n            window.location.href = '/profile'\r\n        })\r\n    }\r\n\r\n    const handleCloseConfirm = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            setOpen({\r\n                ...open,\r\n                confirm: false,\r\n            })\r\n        }\r\n        setOpen({\r\n            ...open,\r\n            confirm: false,\r\n        })\r\n    }\r\n\r\n    const handleDeleteKeeb = event => {\r\n        event.preventDefault()\r\n        setOpen({\r\n            ...open,\r\n            confirm: true\r\n        })\r\n    }\r\n    // Cloudinary Functions\r\n    const handleImageUploadBtn = event => {\r\n        event.preventDefault()\r\n        document.getElementById('icon-button-file').click()\r\n    }\r\n\r\n    const handleUploadImage = async event => {\r\n        const files = event.target.files\r\n        const data = new FormData()\r\n        data.append('file', files[0])\r\n        data.append('upload_preset', 'keebs_setups')\r\n        setLoading(true)\r\n        const res = await API.uploadImage(data)\r\n        const file = await res\r\n        setUpdateKeeb({\r\n            ...updateKeeb,\r\n            keebImage: file.secure_url\r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    const handleFormSubmit = event => {\r\n        event.preventDefault()\r\n        API.updateKeeb(\r\n            id,\r\n            profile.token,\r\n            updateKeeb.color,\r\n            updateKeeb.plate,\r\n            updateKeeb.keebImage\r\n        ).then(updateData => {\r\n            setUpdateKeeb({\r\n                ...updateKeeb,\r\n                color: updateKeeb.color,\r\n                plate: updateKeeb.plate,\r\n                keebImage: updateKeeb.keebImage\r\n            })\r\n        })\r\n\r\n        API.updateParts(\r\n            id,\r\n            profile.token,\r\n            updateKeeb.switches,\r\n            updateKeeb.switchLube,\r\n            updateKeeb.springWeight,\r\n            updateKeeb.springLube,\r\n            updateKeeb.switchFilm,\r\n            updateKeeb.stabs,\r\n            updateKeeb.stabLube,\r\n            updateKeeb.keyset\r\n        ).then(updateData => {\r\n            setUpdateKeeb({\r\n                ...updateKeeb,\r\n                switches: updateKeeb.switches,\r\n                switchLube: updateKeeb.switchLube,\r\n                springWeight: updateKeeb.springWeight,\r\n                springLube: updateKeeb.springLube,\r\n                switchFilm: updateKeeb.switchFilm,\r\n                stabs: updateKeeb.stabs,\r\n                stabLube: updateKeeb.stabLube,\r\n                keyset: updateKeeb.keyset\r\n            })\r\n        }).then(res => {\r\n            setOpen({\r\n                ...open,\r\n                parts: true\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <KeebUpdateForm\r\n                handleInputChange={handleInputChange}\r\n                handleFormSubmit={handleFormSubmit}\r\n                handleDeleteKeeb={handleDeleteKeeb}\r\n                handleImageUploadBtn={handleImageUploadBtn}\r\n                handleUploadImage={handleUploadImage}\r\n                keebImage={updateKeeb.keebImage}\r\n                keebId={updateKeeb.keebId}\r\n                name={updateKeeb.name}\r\n                maker={updateKeeb.maker}\r\n                color={updateKeeb.color}\r\n                plate={updateKeeb.plate}\r\n                switches={updateKeeb.switches}\r\n                switchLube={updateKeeb.switchLube}\r\n                springWeight={updateKeeb.springWeight}\r\n                springLube={updateKeeb.springLube}\r\n                switchFilm={updateKeeb.switchFilm}\r\n                stabs={updateKeeb.stabs}\r\n                stabLube={updateKeeb.stabLube}\r\n                keyset={updateKeeb.keyset}\r\n                loading={loading}\r\n            />\r\n            <SnackbarAlert\r\n                open={open}\r\n                keeb={updateKeeb.name}\r\n                handleClose={handleClose}\r\n                handleConfirm={handleConfirm}\r\n                handleCloseConfirm={handleCloseConfirm}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\UpdateProfile\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SignUpForm\\index.js",["130"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SnackbarAlert\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\SignInPage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SignInForm\\index.js",["131"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\UpdateProfileForm\\index.js",["132"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\utils\\API.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebCard\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\HomePage\\index.js",["133"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\contexts\\ProfileContext\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebImageStepper\\index.js",["134","135","136","137"],"// React\r\nimport React, { useState } from 'react'\r\n// API\r\nimport API from '../../utils/API'\r\n// Material-UI Components\r\nimport { MobileStepper, Paper, Typography, Button } from '@material-ui/core'\r\n// Material-UI Icons\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\r\n// Material-UI Styles\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n// Material-UI Swipeable\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 500,\r\n        flexGrow: 1,\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: 50,\r\n        paddingLeft: theme.spacing(4),\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    img: {\r\n        height: 350,\r\n        display: 'block',\r\n        maxWidth: 500,\r\n        overflow: 'hidden',\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nexport default function KeebImageStepper(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const maxSteps = props.photos.length;\r\n\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AutoPlaySwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={activeStep}\r\n                onChangeIndex={handleStepChange}\r\n                enableMouseEvents\r\n            >\r\n                {props.photos.map((step, index) => (\r\n                    <div key={step.id}>\r\n                        {Math.abs(activeStep - index) <= 2 ? (\r\n                            <img className={classes.img} src={step.keebImage} alt=\"keeb photo\" />\r\n                        ) : null}\r\n                    </div>\r\n                ))}\r\n            </AutoPlaySwipeableViews>\r\n            <MobileStepper\r\n                steps={maxSteps}\r\n                position=\"static\"\r\n                variant=\"text\"\r\n                activeStep={activeStep}\r\n                style={{ backgroundColor: \"#BFBFBF\" }}\r\n                nextButton={\r\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n                        Next\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                    </Button>\r\n                }\r\n                backButton={\r\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                    Back\r\n                    </Button>\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\AddPartsForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AddKeebPage\\index.js",["138"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AddPartsPage\\index.js",["139"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\AddKeebForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\App.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\NavBar\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AboutPage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\ProfileCard\\index.js",["140"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\ProfilePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SearchKeebInput\\index.js",["141","142"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\Footer\\index.js",["143"],{"ruleId":"144","severity":1,"message":"145","line":25,"column":8,"nodeType":"146","endLine":25,"endColumn":10,"suggestions":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":21},{"ruleId":"152","severity":1,"message":"156","line":12,"column":116,"nodeType":"154","messageId":"155","endLine":12,"endColumn":126},{"ruleId":"144","severity":1,"message":"157","line":66,"column":8,"nodeType":"146","endLine":66,"endColumn":10,"suggestions":"158"},{"ruleId":"148","replacedBy":"159"},{"ruleId":"150","replacedBy":"160"},{"ruleId":"152","severity":1,"message":"161","line":11,"column":10,"nodeType":"154","messageId":"155","endLine":11,"endColumn":18},{"ruleId":"144","severity":1,"message":"162","line":47,"column":8,"nodeType":"146","endLine":47,"endColumn":10,"suggestions":"163"},{"ruleId":"152","severity":1,"message":"164","line":10,"column":8,"nodeType":"154","messageId":"155","endLine":10,"endColumn":15},{"ruleId":"152","severity":1,"message":"165","line":7,"column":10,"nodeType":"154","messageId":"155","endLine":7,"endColumn":19},{"ruleId":"152","severity":1,"message":"166","line":2,"column":17,"nodeType":"154","messageId":"155","endLine":2,"endColumn":25},{"ruleId":"152","severity":1,"message":"167","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":23},{"ruleId":"152","severity":1,"message":"168","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":11},{"ruleId":"152","severity":1,"message":"169","line":6,"column":25,"nodeType":"154","messageId":"155","endLine":6,"endColumn":30},{"ruleId":"152","severity":1,"message":"156","line":6,"column":32,"nodeType":"154","messageId":"155","endLine":6,"endColumn":42},{"ruleId":"170","severity":1,"message":"171","line":69,"column":29,"nodeType":"172","endLine":69,"endColumn":98},{"ruleId":"144","severity":1,"message":"157","line":32,"column":8,"nodeType":"146","endLine":32,"endColumn":10,"suggestions":"173"},{"ruleId":"144","severity":1,"message":"174","line":40,"column":8,"nodeType":"146","endLine":40,"endColumn":10,"suggestions":"175"},{"ruleId":"144","severity":1,"message":"157","line":36,"column":8,"nodeType":"146","endLine":36,"endColumn":10,"suggestions":"176"},{"ruleId":"152","severity":1,"message":"177","line":35,"column":12,"nodeType":"154","messageId":"155","endLine":35,"endColumn":16},{"ruleId":"152","severity":1,"message":"178","line":39,"column":12,"nodeType":"154","messageId":"155","endLine":39,"endColumn":23},{"ruleId":"179","severity":1,"message":"180","line":12,"column":17,"nodeType":"181","endLine":12,"endColumn":32},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchKeebData' and 'profileData'. Either include them or remove the dependency array.","ArrayExpression",["182"],"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'LoadingCircle' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'profileData'. Either include it or remove the dependency array.",["185"],["183"],["184"],"'Snackbar' is defined but never used.","React Hook useEffect has missing dependencies: 'loadKeeb' and 'profileData'. Either include them or remove the dependency array.",["186"],"'AddIcon' is defined but never used.","'Container' is defined but never used.","'useState' is defined but never used.","'SearchKeebInput' is defined but never used.","'API' is defined but never used.","'Paper' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["187"],"React Hook useEffect has missing dependencies: 'getKeebName' and 'profileData'. Either include them or remove the dependency array.",["188"],["189"],"'list' is assigned a value but never used.","'searchState' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"desc":"190","fix":"191"},"no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"192","fix":"196"},{"desc":"197","fix":"198"},{"desc":"192","fix":"199"},"Update the dependencies array to be: [fetchKeebData, profileData]",{"range":"200","text":"201"},"Update the dependencies array to be: [profileData]",{"range":"202","text":"203"},"Update the dependencies array to be: [loadKeeb, profileData]",{"range":"204","text":"205"},{"range":"206","text":"203"},"Update the dependencies array to be: [getKeebName, profileData]",{"range":"207","text":"208"},{"range":"209","text":"203"},[716,718],"[fetchKeebData, profileData]",[1807,1809],"[profileData]",[1226,1228],"[loadKeeb, profileData]",[806,808],[1065,1067],"[getKeebName, profileData]",[1136,1138]]