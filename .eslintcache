[{"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\ProfileCard\\index.js":"1","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\ViewKeebList\\index.js":"2","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\UpdateProfileForm\\index.js":"3","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SearchKeebInput\\index.js":"4","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\App.js":"5","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\Footer\\index.js":"6","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\HomePage\\index.js":"7","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebCard\\index.js":"8","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AboutPage\\index.js":"9","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\NoMatch\\index.js":"10","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\utils\\API.js":"11","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\ProfilePage\\index.js":"12","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\NavBar\\index.js":"13","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebPhotoGallery\\index.js":"14","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\AddKeebForm\\index.js":"15","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SignInForm\\index.js":"16","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AddPartsPage\\index.js":"17","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebImageStepper\\index.js":"18","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebUpdateForm\\index.js":"19","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\LoadingCircle\\index.js":"20"},{"size":3611,"mtime":1625694643940,"results":"21","hashOfConfig":"22"},{"size":5999,"mtime":1625694827802,"results":"23","hashOfConfig":"22"},{"size":5952,"mtime":1623361602894,"results":"24","hashOfConfig":"22"},{"size":5204,"mtime":1623361756574,"results":"25","hashOfConfig":"22"},{"size":1995,"mtime":1625691225091,"results":"26","hashOfConfig":"22"},{"size":569,"mtime":1625691264363,"results":"27","hashOfConfig":"22"},{"size":3229,"mtime":1623362159806,"results":"28","hashOfConfig":"22"},{"size":11422,"mtime":1623271820271,"results":"29","hashOfConfig":"22"},{"size":898,"mtime":1625694552010,"results":"30","hashOfConfig":"22"},{"size":1214,"mtime":1625180866163,"results":"31","hashOfConfig":"22"},{"size":12184,"mtime":1627594384043,"results":"32","hashOfConfig":"22"},{"size":689,"mtime":1625179863174,"results":"33","hashOfConfig":"22"},{"size":7468,"mtime":1625691244993,"results":"34","hashOfConfig":"22"},{"size":3968,"mtime":1626212378532,"results":"35","hashOfConfig":"22"},{"size":4011,"mtime":1625180377545,"results":"36","hashOfConfig":"22"},{"size":4513,"mtime":1623201835614,"results":"37","hashOfConfig":"22"},{"size":2853,"mtime":1623104177277,"results":"38","hashOfConfig":"22"},{"size":3187,"mtime":1626212827883,"results":"39","hashOfConfig":"22"},{"size":9998,"mtime":1623356488162,"results":"40","hashOfConfig":"22"},{"size":552,"mtime":1621020090675,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"1espzfp",{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\ProfileCard\\index.js",["88"],"// React\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n// Contexts\r\nimport { useProfile, useProfileData } from '../../contexts/ProfileContext'\r\n// Material-UI Components\r\nimport { Avatar, Card, CardActions, CardContent, CardMedia, Button, Typography, List, ListItem, ListItemText, ListItemAvatar } from '@material-ui/core'\r\n// Material-UI Icons\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport EmailIcon from '@material-ui/icons/Email'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\n// Material-UI Styles\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n// CSS\r\nimport './styles.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    profileCard: {\r\n        height: '510px',\r\n        backgroundColor: \"#0B0B0D\",\r\n        color: \"#747C8C\"\r\n    },\r\n    updateProfileBtn: {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    }\r\n}))\r\n\r\nexport default function ProfileCard(props) {\r\n    const classes = useStyles()\r\n    const profile = useProfile()\r\n    const profileData = useProfileData()\r\n\r\n    useEffect(() => {\r\n        profileData()\r\n    }, [])\r\n\r\n    return (\r\n        <Card className={classes.profileCard}>\r\n            <CardMedia\r\n                component='img'\r\n                alt='profile image'\r\n                image={\r\n                    profile !== null ? profile.profileImage : null\r\n                }\r\n                className=\"profileImage\"\r\n            />\r\n            <CardContent>\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar\r\n                                style={{ backgroundColor: \"transparent\", color: \"#747C8C\" }}\r\n                            >\r\n                                <AccountCircleIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={\r\n                                <Typography variant='h6'>\r\n                                    {profile !== null ? profile.name : null}\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar\r\n                                style={{ backgroundColor: \"transparent\", color: \"#747C8C\" }}\r\n                            >\r\n                                <EmailIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={\r\n                                <Typography variant='p'>\r\n                                    {profile !== null ? profile.email : null}\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                </List>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Link\r\n                    to={profile !== null ? `/updateprofile/${profile.id}` : null}\r\n                    style={{ textDecoration: 'none', color: 'black' }}\r\n                    className={classes.updateProfileBtn}\r\n                >\r\n                    <Button\r\n                        endIcon={<SettingsIcon />}\r\n                        style={{ color: \"#BFBFBF\" }}\r\n                    >\r\n                        Update profile\r\n                    </Button>\r\n                </Link>\r\n            </CardActions>\r\n        </Card >\r\n    )\r\n}\r\n",["89","90"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\ViewKeebList\\index.js",["91","92","93"],"// React\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n// API\r\nimport API from '../../utils/API'\r\n// Components\r\nimport LoadingCircle from '../../components/LoadingCircle'\r\nimport SnackbarAlert from '../../components/SnackbarAlert'\r\n// Contexts\r\nimport { useProfile, useProfileData } from '../../contexts/ProfileContext'\r\n// Material-UI Components\r\nimport { Avatar, Card, List, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, IconButton, Tooltip, Typography } from '@material-ui/core'\r\n// Material-UI Icons\r\nimport PhotoIcon from '@material-ui/icons/Photo'\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote'\r\n// Material-UI Styles\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nconst useStyles = makeStyles({\r\n    updateKeebLink: {\r\n        textDecoration: \"none\",\r\n        color: \"#747C8C\",\r\n        display:'flex',\r\n        justifyContent:'center',\r\n    },\r\n    keebListDiv: {\r\n        dispaly: 'flex',\r\n        flexDirection: \"column\",\r\n        width: '100%',\r\n        height: \"510px\",\r\n        backgroundColor: \"#0B0B0D\",\r\n        color: \"#747C8C\"\r\n    },\r\n    keebList: {\r\n        height: '400px',\r\n        overflow: \"auto\"\r\n    },\r\n    keebIcon: {\r\n        color: '#747C8C',\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n})\r\n\r\nexport default function ViewKeebList(props) {\r\n    const classes = useStyles()\r\n    const profile = useProfile()\r\n    const profileData = useProfileData()\r\n\r\n    const [open, setOpen] = useState({\r\n        sound: false,\r\n    });\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            setOpen({\r\n                sound: false,\r\n            });\r\n            return;\r\n        }\r\n        setOpen({\r\n            sound: false,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        profileData()\r\n    }, [])\r\n\r\n    const handleUploadSoundBtn = event => {\r\n        event.preventDefault()\r\n        let id = event.currentTarget.id\r\n        document.getElementById(`sound${id}`).click()\r\n    }\r\n\r\n    const handleSoundTest = async event => {\r\n        event.preventDefault()\r\n        let id = event.currentTarget.id.slice(5)\r\n        const files = event.target.files[0]\r\n        const audio = new FormData()\r\n        audio.append('file', files)\r\n        audio.append('upload_preset', 'keebs_setups')\r\n        const res = await API.uploadAudio(audio)\r\n        const file = await res\r\n        API.updateSound(profile.token, id, file.secure_url).then(res => {\r\n            console.log(res)\r\n            setOpen({\r\n                sound: true\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.keebListDiv}>\r\n            <h2 style={{ textAlign: 'center' }}>Keebs</h2>\r\n            <List className={classes.keebList}>\r\n                {profile !== null ?\r\n                    profile.keebs.map(res => (\r\n                        <ListItem key={res.id}>\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    style={{ backgroundColor: \"transparent\" }}\r\n                                >\r\n                                    <Link\r\n                                        to={`/updatekeeb/photos/${res.id}`}\r\n                                    >\r\n                                        <Tooltip title={`Update photo album`} arrow>\r\n                                            <IconButton\r\n                                                className={classes.keebIcon}\r\n                                            >\r\n                                                <PhotoIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Link>\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={\r\n                                    <>\r\n                                        <Tooltip title={`Update keeb`} arrow>\r\n                                            <Link to={`/updatekeeb/${res.id}`} className={classes.updateKeebLink}>\r\n                                                <strong>{res.maker} {res.name}</strong>\r\n                                            </Link>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                }\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    className={classes.input}\r\n                                    id={`sound${res.id}`}\r\n                                    onChange={handleSoundTest}\r\n                                />\r\n                                <label htmlFor={`sound${res.id}`}>\r\n                                    <Tooltip title={`Upload sound test`} arrow>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            aria-label=\"sound test\"\r\n                                            id={res.id}\r\n                                            onClick={handleUploadSoundBtn}\r\n                                            style={{ color: \"#747C8C\" }}\r\n                                        >\r\n                                            <MusicNoteIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </label>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    ))\r\n                    :\r\n                    null\r\n                }\r\n            </List>\r\n            <SnackbarAlert\r\n                open={open}\r\n                handleClose={handleClose}\r\n            />\r\n        </Card >\r\n    )\r\n}","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\UpdateProfileForm\\index.js",["94"],"// React\r\nimport React, { useState } from 'react'\r\n// Components\r\nimport LoadingCircle from '../../components/LoadingCircle'\r\n// Material-UI Components\r\nimport { TextField, Card, CardHeader, CardMedia, CardContent, CardActions, IconButton, Button, Grid, Tooltip } from '@material-ui/core'\r\n// Material-UI Icons\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// Material-UI Styles\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 475,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        backgroundColor: \"#0B0B0D\",\r\n        color: \"#747C8C\"\r\n    },\r\n    media: {\r\n        height: '300px',\r\n    },\r\n    updateInputField: {\r\n        margin: 0,\r\n        width: \"100%\",\r\n        \"& .MuiFormLabel-root\": {\r\n            color: \"#747C8C\",\r\n        },\r\n        \"& .MuiFormLabel-root.Mui-focused \": {\r\n            color: \"#BFBFBF\",\r\n        },\r\n        \"& .MuiInputBase-root\": {\r\n            color: \"#747C8C\"\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    loadingCircle: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: '2rem'\r\n    },\r\n    updateFormBtns: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n}));\r\n\r\nexport default function UpdateProfileForm(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                action={\r\n                    <>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"icon-button-file\"\r\n                            type=\"file\"\r\n                            onChange={props.handleUploadImage}\r\n                        />\r\n                        <label htmlFor=\"icon-button-file\">\r\n                            <Tooltip title=\"Update Photo\" arrow>\r\n                                <IconButton\r\n                                    aria-label=\"update photo\"\r\n                                    component=\"span\"\r\n                                    onClick={props.handleImageUploadBtn}\r\n                                    style={{ color: \"#747C8C\" }}\r\n                                >\r\n                                    <AddAPhotoIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </label>\r\n                    </>\r\n                }\r\n                title='Update Profile'\r\n            />\r\n            {props.loading ?\r\n                (\r\n                    <div className={classes.loadingCircle}>\r\n                        <LoadingCircle />\r\n                    </div>\r\n                )\r\n                :\r\n                (\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt={`${props.name} photo`}\r\n                        className={classes.media}\r\n                        image={props.image !== null ? props.image : 'https://i.imgur.com/DzshH5n.png'}\r\n                        title=\"profile photo\"\r\n                    />\r\n                )\r\n            }\r\n            <CardContent>\r\n                <form autoComplete='off' onSubmit={props.handleFormSubmit}>\r\n                    <Grid\r\n                        container\r\n                        spacing={2}\r\n                        direction=\"row\"\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"New username\"\r\n                                value={props.name !== null ? props.name : null}\r\n                                margin=\"normal\"\r\n                                onChange={props.handleInputChange}\r\n                                className={classes.updateInputField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                placeholder=\"New email\"\r\n                                value={props.email}\r\n                                margin=\"normal\"\r\n                                onChange={props.handleInputChange}\r\n                                className={classes.updateInputField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                type='password'\r\n                                placeholder=\"New password\"\r\n                                margin=\"normal\"\r\n                                onChange={props.handleInputChange}\r\n                                className={classes.updateInputField}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </CardContent>\r\n            <CardActions className={classes.updateFormBtns}>\r\n                <Button\r\n                    type='submit'\r\n                    endIcon={<SaveAltIcon />}\r\n                    style={{ color: \"#BFBFBF\" }}\r\n                    onClick={props.handleFormSubmit}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button\r\n                    endIcon={<CloseIcon />}\r\n                    style={{ color: \"#BFBFBF\" }}\r\n                    onClick={props.handleDeleteProfile}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n",["95","96"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SearchKeebInput\\index.js",["97","98"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\App.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\Footer\\index.js",["99"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\HomePage\\index.js",["100"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebCard\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AboutPage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\NoMatch\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\utils\\API.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\ProfilePage\\index.js",[],["101","102"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\NavBar\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebPhotoGallery\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\AddKeebForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SignInForm\\index.js",["103"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AddPartsPage\\index.js",["104"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebImageStepper\\index.js",["105"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebUpdateForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\LoadingCircle\\index.js",[],{"ruleId":"106","severity":1,"message":"107","line":36,"column":8,"nodeType":"108","endLine":36,"endColumn":10,"suggestions":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":21},{"ruleId":"114","severity":1,"message":"118","line":12,"column":116,"nodeType":"116","messageId":"117","endLine":12,"endColumn":126},{"ruleId":"106","severity":1,"message":"107","line":68,"column":8,"nodeType":"108","endLine":68,"endColumn":10,"suggestions":"119"},{"ruleId":"114","severity":1,"message":"120","line":2,"column":17,"nodeType":"116","messageId":"117","endLine":2,"endColumn":25},{"ruleId":"110","replacedBy":"121"},{"ruleId":"112","replacedBy":"122"},{"ruleId":"114","severity":1,"message":"123","line":36,"column":12,"nodeType":"116","messageId":"117","endLine":36,"endColumn":16},{"ruleId":"114","severity":1,"message":"124","line":40,"column":12,"nodeType":"116","messageId":"117","endLine":40,"endColumn":23},{"ruleId":"125","severity":1,"message":"126","line":12,"column":17,"nodeType":"127","endLine":12,"endColumn":32},{"ruleId":"114","severity":1,"message":"128","line":17,"column":21,"nodeType":"116","messageId":"117","endLine":17,"endColumn":31},{"ruleId":"110","replacedBy":"129"},{"ruleId":"112","replacedBy":"130"},{"ruleId":"114","severity":1,"message":"131","line":7,"column":10,"nodeType":"116","messageId":"117","endLine":7,"endColumn":19},{"ruleId":"106","severity":1,"message":"132","line":40,"column":8,"nodeType":"108","endLine":40,"endColumn":10,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":69,"column":29,"nodeType":"136","endLine":69,"endColumn":98},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'profileData'. Either include it or remove the dependency array.","ArrayExpression",["137"],"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'LoadingCircle' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.",["140"],"'useState' is defined but never used.",["138"],["139"],"'list' is assigned a value but never used.","'searchState' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'setChecked' is assigned a value but never used.",["138"],["139"],"'Container' is defined but never used.","React Hook useEffect has missing dependencies: 'getKeebName' and 'profileData'. Either include them or remove the dependency array.",["141"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",{"desc":"142","fix":"143"},"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [profileData]",{"range":"147","text":"148"},{"range":"149","text":"148"},"Update the dependencies array to be: [getKeebName, profileData]",{"range":"150","text":"151"},[1136,1138],"[profileData]",[1866,1868],[1065,1067],"[getKeebName, profileData]"]