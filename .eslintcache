[{"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\KeebPhotosUpdatePage\\index.js":"1","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebPhotoGallery\\index.js":"2","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\ViewKeebList\\index.js":"3","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebUpdateForm\\index.js":"4","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\KeebUpdatePage\\index.js":"5","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\UpdateProfile\\index.js":"6","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SignUpForm\\index.js":"7","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SnackbarAlert\\index.js":"8","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\SignInPage\\index.js":"9","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SignInForm\\index.js":"10","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\UpdateProfileForm\\index.js":"11","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\utils\\API.js":"12","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebCard\\index.js":"13","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\HomePage\\index.js":"14","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\contexts\\ProfileContext\\index.js":"15","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebImageStepper\\index.js":"16","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\index.js":"17","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\AddPartsForm\\index.js":"18","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AddKeebPage\\index.js":"19","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AddPartsPage\\index.js":"20","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\AddKeebForm\\index.js":"21","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\App.js":"22","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\NavBar\\index.js":"23","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AboutPage\\index.js":"24","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\ProfileCard\\index.js":"25","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\ProfilePage\\index.js":"26","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SearchKeebInput\\index.js":"27","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\Footer\\index.js":"28","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\LoadingCircle\\index.js":"29"},{"size":2243,"mtime":1622839337614,"results":"30","hashOfConfig":"31"},{"size":3786,"mtime":1623200491095,"results":"32","hashOfConfig":"31"},{"size":5936,"mtime":1623287918721,"results":"33","hashOfConfig":"31"},{"size":9998,"mtime":1623201615526,"results":"34","hashOfConfig":"31"},{"size":7180,"mtime":1623107163194,"results":"35","hashOfConfig":"31"},{"size":4518,"mtime":1623106877039,"results":"36","hashOfConfig":"31"},{"size":5180,"mtime":1623201859051,"results":"37","hashOfConfig":"31"},{"size":5887,"mtime":1623265713170,"results":"38","hashOfConfig":"31"},{"size":1871,"mtime":1623098227979,"results":"39","hashOfConfig":"31"},{"size":4513,"mtime":1623201835614,"results":"40","hashOfConfig":"31"},{"size":5893,"mtime":1623201653631,"results":"41","hashOfConfig":"31"},{"size":12184,"mtime":1623108100409,"results":"42","hashOfConfig":"31"},{"size":11422,"mtime":1623271820271,"results":"43","hashOfConfig":"31"},{"size":3437,"mtime":1623275420822,"results":"44","hashOfConfig":"31"},{"size":1865,"mtime":1620763204608,"results":"45","hashOfConfig":"31"},{"size":3184,"mtime":1623200710605,"results":"46","hashOfConfig":"31"},{"size":163,"mtime":1606348114948,"results":"47","hashOfConfig":"31"},{"size":4794,"mtime":1623275435331,"results":"48","hashOfConfig":"31"},{"size":2569,"mtime":1623104047985,"results":"49","hashOfConfig":"31"},{"size":2853,"mtime":1623104177277,"results":"50","hashOfConfig":"31"},{"size":4018,"mtime":1623201726383,"results":"51","hashOfConfig":"31"},{"size":1995,"mtime":1623287646192,"results":"52","hashOfConfig":"31"},{"size":7344,"mtime":1623288855584,"results":"53","hashOfConfig":"31"},{"size":1421,"mtime":1623112006895,"results":"54","hashOfConfig":"31"},{"size":3571,"mtime":1623201528262,"results":"55","hashOfConfig":"31"},{"size":811,"mtime":1623286838554,"results":"56","hashOfConfig":"31"},{"size":5205,"mtime":1623288717071,"results":"57","hashOfConfig":"31"},{"size":569,"mtime":1623200371583,"results":"58","hashOfConfig":"31"},{"size":552,"mtime":1621020090675,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1espzfp",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\KeebPhotosUpdatePage\\index.js",["127"],"// React\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n// API\r\nimport API from '../../utils/API'\r\n// Components\r\nimport KeebPhotoGallery from '../../components/KeebPhotoGallery'\r\n// Contexts\r\nimport { useProfile, useProfileData } from '../../contexts/ProfileContext'\r\n\r\nexport default function KeebPhotosUpdatePage() {\r\n    const profile = useProfile()\r\n    const profileData = useProfileData()\r\n    const [keeb, setKeeb] = useState(null)\r\n    const [keebPhotos, setKeebPhotos] = useState({\r\n        photos: []\r\n    })\r\n\r\n    const { id } = useParams()\r\n    let uploadedPhotos = []\r\n\r\n    useEffect(() => {\r\n        profileData()\r\n        fetchKeebData()\r\n    }, [])\r\n\r\n    function fetchKeebData() {\r\n        // Get Keeb Info\r\n        API.getOneKeeb(id).then(res => {\r\n            setKeeb(res)\r\n        })\r\n        // Get Keeb Photos\r\n        API.getAllPhotos(id).then(res => {\r\n            setKeebPhotos({\r\n                photos: res\r\n            })\r\n        })\r\n    }\r\n    // Opens Cloudinary Widget\r\n    const showWidget = () => {\r\n        myWidget.open()\r\n    }\r\n    // Cloudinary Widget\r\n    const myWidget = window.cloudinary.createUploadWidget({\r\n        cloudName: 'jsk321',\r\n        uploadPreset: 'keebs_setups'\r\n    }, (error, result) => {\r\n        if (!error && result && result.event === 'success') {\r\n            let photo = {image: result.info.url, KeebId: id}\r\n            API.uploadKeebPhotos(profile.token, photo).then(res => {\r\n                uploadedPhotos.push(res)\r\n                let allPhotos = keebPhotos.photos.concat(uploadedPhotos)\r\n                setKeebPhotos({\r\n                    photos: allPhotos\r\n                })\r\n            })\r\n        }\r\n    })\r\n\r\n    const handleRemoveBtn = event => {\r\n        event.preventDefault()\r\n        let id = event.currentTarget.id\r\n        API.deletePhoto(profile.token, id).then(res => {\r\n            window.location.reload()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <KeebPhotoGallery\r\n                keeb={keeb}\r\n                photos={keebPhotos.photos}\r\n                showWidget={showWidget}\r\n                handleRemoveBtn={handleRemoveBtn}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n",["128","129"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebPhotoGallery\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\ViewKeebList\\index.js",["130","131","132"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebUpdateForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\KeebUpdatePage\\index.js",["133","134"],"// React\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n// API\r\nimport API from \"../../utils/API\"\r\n// Components\r\nimport KeebUpdateForm from '../../components/KeebUpdateForm'\r\nimport SnackbarAlert from '../../components/SnackbarAlert'\r\n// Context\r\nimport { useProfile, useProfileData } from '../../contexts/ProfileContext'\r\nimport { Snackbar } from '@material-ui/core'\r\n\r\nexport default function KeebUpdatePage() {\r\n    // Profile Context\r\n    const profile = useProfile()\r\n    const profileData = useProfileData()\r\n\r\n    const [updateKeeb, setUpdateKeeb] = useState({\r\n        keebId: \"\",\r\n        name: \"\",\r\n        maker: \"\",\r\n        color: \"\",\r\n        plate: \"\",\r\n        keebImage: \"\",\r\n        switches: \"\",\r\n        switchLube: \"\",\r\n        springWeight: \"\",\r\n        springLube: \"\",\r\n        switchFilm: \"\",\r\n        stabs: \"\",\r\n        stabLube: \"\",\r\n        keyset: \"\"\r\n    })\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [open, setOpen] = useState({\r\n        parts: false,\r\n        confirm: false,\r\n        deleted: false,\r\n    });\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        profileData()\r\n        loadKeeb()\r\n    }, [])\r\n\r\n    function loadKeeb() {\r\n        API.getOneKeeb(id).then(keebData => {\r\n            if (keebData) {\r\n                setUpdateKeeb({\r\n                    keebId: id,\r\n                    name: keebData.name,\r\n                    maker: keebData.maker,\r\n                    color: keebData.color,\r\n                    plate: keebData.plate,\r\n                    keebImage: keebData.keebImage,\r\n                    switches: keebData.Parts[0].switches,\r\n                    switchLube: keebData.Parts[0].switchLube,\r\n                    springWeight: keebData.Parts[0].springWeight,\r\n                    springLube: keebData.Parts[0].springLube,\r\n                    switchFilm: keebData.Parts[0].switchFilm,\r\n                    stabs: keebData.Parts[0].stabs,\r\n                    stabLube: keebData.Parts[0].stabLube,\r\n                    keyset: keebData.Parts[0].keyset\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n        setUpdateKeeb({\r\n            ...updateKeeb,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            setOpen({\r\n                ...open,\r\n                parts: false,\r\n                confirm: false,\r\n                deleted: false,\r\n            });\r\n            window.location.href = '/profile'\r\n        }\r\n        setOpen({\r\n            ...open,\r\n            parts: false,\r\n            confirm: false,\r\n            deleted: false,\r\n        });\r\n        window.location.href = '/profile'\r\n    };\r\n\r\n    const handleConfirm = event => {\r\n        event.preventDefault()\r\n        API.deleteParts(profile.token, id)\r\n        API.deleteKeeb(profile.token, id).then(res => {\r\n            setOpen({\r\n                ...open,\r\n                parts: false,\r\n                confirm: false,\r\n                deleted: false,\r\n            })\r\n            window.location.href = '/profile'\r\n        })\r\n    }\r\n\r\n    const handleCloseConfirm = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            setOpen({\r\n                ...open,\r\n                confirm: false,\r\n            })\r\n        }\r\n        setOpen({\r\n            ...open,\r\n            confirm: false,\r\n        })\r\n    }\r\n\r\n    const handleDeleteKeeb = event => {\r\n        event.preventDefault()\r\n        setOpen({\r\n            ...open,\r\n            confirm: true\r\n        })\r\n    }\r\n    // Cloudinary Functions\r\n    const handleImageUploadBtn = event => {\r\n        event.preventDefault()\r\n        document.getElementById('icon-button-file').click()\r\n    }\r\n\r\n    const handleUploadImage = async event => {\r\n        const files = event.target.files\r\n        const data = new FormData()\r\n        data.append('file', files[0])\r\n        data.append('upload_preset', 'keebs_setups')\r\n        setLoading(true)\r\n        const res = await API.uploadImage(data)\r\n        const file = await res\r\n        setUpdateKeeb({\r\n            ...updateKeeb,\r\n            keebImage: file.secure_url\r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    const handleFormSubmit = event => {\r\n        event.preventDefault()\r\n        API.updateKeeb(\r\n            id,\r\n            profile.token,\r\n            updateKeeb.color,\r\n            updateKeeb.plate,\r\n            updateKeeb.keebImage\r\n        ).then(updateData => {\r\n            setUpdateKeeb({\r\n                ...updateKeeb,\r\n                color: updateKeeb.color,\r\n                plate: updateKeeb.plate,\r\n                keebImage: updateKeeb.keebImage\r\n            })\r\n        })\r\n\r\n        API.updateParts(\r\n            id,\r\n            profile.token,\r\n            updateKeeb.switches,\r\n            updateKeeb.switchLube,\r\n            updateKeeb.springWeight,\r\n            updateKeeb.springLube,\r\n            updateKeeb.switchFilm,\r\n            updateKeeb.stabs,\r\n            updateKeeb.stabLube,\r\n            updateKeeb.keyset\r\n        ).then(updateData => {\r\n            setUpdateKeeb({\r\n                ...updateKeeb,\r\n                switches: updateKeeb.switches,\r\n                switchLube: updateKeeb.switchLube,\r\n                springWeight: updateKeeb.springWeight,\r\n                springLube: updateKeeb.springLube,\r\n                switchFilm: updateKeeb.switchFilm,\r\n                stabs: updateKeeb.stabs,\r\n                stabLube: updateKeeb.stabLube,\r\n                keyset: updateKeeb.keyset\r\n            })\r\n        }).then(res => {\r\n            setOpen({\r\n                ...open,\r\n                parts: true\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <KeebUpdateForm\r\n                handleInputChange={handleInputChange}\r\n                handleFormSubmit={handleFormSubmit}\r\n                handleDeleteKeeb={handleDeleteKeeb}\r\n                handleImageUploadBtn={handleImageUploadBtn}\r\n                handleUploadImage={handleUploadImage}\r\n                keebImage={updateKeeb.keebImage}\r\n                keebId={updateKeeb.keebId}\r\n                name={updateKeeb.name}\r\n                maker={updateKeeb.maker}\r\n                color={updateKeeb.color}\r\n                plate={updateKeeb.plate}\r\n                switches={updateKeeb.switches}\r\n                switchLube={updateKeeb.switchLube}\r\n                springWeight={updateKeeb.springWeight}\r\n                springLube={updateKeeb.springLube}\r\n                switchFilm={updateKeeb.switchFilm}\r\n                stabs={updateKeeb.stabs}\r\n                stabLube={updateKeeb.stabLube}\r\n                keyset={updateKeeb.keyset}\r\n                loading={loading}\r\n            />\r\n            <SnackbarAlert\r\n                open={open}\r\n                keeb={updateKeeb.name}\r\n                handleClose={handleClose}\r\n                handleConfirm={handleConfirm}\r\n                handleCloseConfirm={handleCloseConfirm}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n",["135","136"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\UpdateProfile\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SignUpForm\\index.js",["137"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SnackbarAlert\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\SignInPage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SignInForm\\index.js",["138"],"// React\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// Components\r\nimport SnackbarAlert from '../../components/SnackbarAlert'\r\n// Material-UI Components\r\nimport { Container, Paper, TextField, Grid, Button } from '@material-ui/core'\r\n// Material-UI Icons\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n// Material-UI Styles\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// CSS\r\nimport './styles.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    signInPaper: {\r\n        width: 300,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        backgroundColor: \"#0B0B0D\",\r\n        color: \"#747C8C\"\r\n    },\r\n    signInTextField: {\r\n        \"& .MuiFormLabel-root\": {\r\n            color: \"#747C8C\",\r\n        },\r\n        \"& .MuiFormLabel-root.Mui-focused \": {\r\n            color: \"#BFBFBF\",\r\n        },\r\n        \"& .MuiInputBase-root\": {\r\n            color: \"#747C8C\"\r\n        },\r\n    },\r\n    signInBtn: {\r\n        marginTop: '1rem',\r\n        textAlign: 'center',\r\n        marginBottom: '1rem',\r\n    },\r\n    registered: {\r\n        marginBottom: '1rem',\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\n\r\nexport default function SignInForm(props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Paper className={classes.signInPaper}>\r\n            <div className={classes.signInForm}>\r\n                <h2 style={{ textAlign: 'center' }}>Sign in</h2>\r\n                <form noValidate autoComplete='off' onSubmit={props.handleFormSubmit}>\r\n                    <div className={classes.margin}>\r\n                        <Grid container spacing={1} alignItems=\"flex-end\">\r\n                            <Grid item>\r\n                                <EmailIcon />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Email\"\r\n                                    name='email'\r\n                                    className={classes.signInTextField}\r\n                                    onChange={props.handleInputChange}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={1} alignItems=\"flex-end\">\r\n                            <Grid item>\r\n                                <VpnKeyIcon />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Password\"\r\n                                    name='password'\r\n                                    type=\"password\"\r\n                                    className={classes.signInTextField}\r\n                                    onChange={props.handleInputChange}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                    <div className={classes.signInBtn}>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            type='submit'\r\n                            variant=\"contained\"\r\n                            style={{ textTransform: 'none', color: \"#BFBFBF\" }}\r\n                        >\r\n                            Sign in\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                <div className={classes.registered}>\r\n                    <p className='registered'>\r\n                        Not registered?\r\n                    </p>\r\n                    <Link\r\n                        to='/register'\r\n                        style={{ textDecoration: 'none' }}\r\n                    >\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"text\"\r\n                            style={{ textTransform: 'none', color: \"#BFBFBF\" }}\r\n                        >\r\n                            Sign up here!\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n                <SnackbarAlert\r\n                    open={props.open}\r\n                    handleClose={props.handleClose}\r\n                />\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n",["139","140"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\UpdateProfileForm\\index.js",["141"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\utils\\API.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebCard\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\HomePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\contexts\\ProfileContext\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\KeebImageStepper\\index.js",["142","143","144","145"],"// React\r\nimport React, { useState } from 'react'\r\n// API\r\nimport API from '../../utils/API'\r\n// Material-UI Components\r\nimport { MobileStepper, Paper, Typography, Button } from '@material-ui/core'\r\n// Material-UI Icons\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\r\n// Material-UI Styles\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n// Material-UI Swipeable\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 500,\r\n        flexGrow: 1,\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: 50,\r\n        paddingLeft: theme.spacing(4),\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    img: {\r\n        height: 350,\r\n        display: 'block',\r\n        maxWidth: 500,\r\n        overflow: 'hidden',\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nexport default function KeebImageStepper(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const maxSteps = props.photos.length;\r\n\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AutoPlaySwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={activeStep}\r\n                onChangeIndex={handleStepChange}\r\n                enableMouseEvents\r\n            >\r\n                {props.photos.map((step, index) => (\r\n                    <div key={step.id}>\r\n                        {Math.abs(activeStep - index) <= 2 ? (\r\n                            <img className={classes.img} src={step.keebImage} alt=\"keeb photo\" />\r\n                        ) : null}\r\n                    </div>\r\n                ))}\r\n            </AutoPlaySwipeableViews>\r\n            <MobileStepper\r\n                steps={maxSteps}\r\n                position=\"static\"\r\n                variant=\"text\"\r\n                activeStep={activeStep}\r\n                style={{ backgroundColor: \"#BFBFBF\" }}\r\n                nextButton={\r\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n                        Next\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                    </Button>\r\n                }\r\n                backButton={\r\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                    Back\r\n                    </Button>\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\AddPartsForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AddKeebPage\\index.js",["146"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AddPartsPage\\index.js",["147"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\AddKeebForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\App.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\NavBar\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\AboutPage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\ProfileCard\\index.js",["148"],"// React\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n// Contexts\r\nimport { useProfile, useProfileData } from '../../contexts/ProfileContext'\r\n// Material-UI Components\r\nimport { Avatar, Card, CardActions, CardContent, CardMedia, Button, Typography, List, ListItem, ListItemText, ListItemAvatar } from '@material-ui/core'\r\n// Material-UI Icons\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport EmailIcon from '@material-ui/icons/Email'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\n// Material-UI Styles\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n// CSS\r\nimport './styles.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    profileCard: {\r\n        height: '510px',\r\n        backgroundColor: \"#0B0B0D\",\r\n        color: \"#747C8C\"\r\n    },\r\n    updateProfileBtn: {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    }\r\n}))\r\n\r\nexport default function ProfileCard(props) {\r\n    const classes = useStyles()\r\n    const profile = useProfile()\r\n    const profileData = useProfileData()\r\n\r\n    useEffect(() => {\r\n        profileData()\r\n    }, [])\r\n\r\n    return (\r\n        <Card className={classes.profileCard}>\r\n            <CardMedia\r\n                component='img'\r\n                alt='profile image'\r\n                image={profile !== null ? profile.profileImage : null}\r\n                className=\"profileImage\"\r\n            />\r\n            <CardContent>\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar\r\n                                style={{ backgroundColor: \"transparent\", color: \"#747C8C\" }}\r\n                            >\r\n                                <AccountCircleIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={\r\n                                <Typography variant='h6'>\r\n                                    {profile !== null ? profile.name : null}\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar\r\n                                style={{ backgroundColor: \"transparent\", color: \"#747C8C\" }}\r\n                            >\r\n                                <EmailIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={\r\n                                <Typography variant='p'>\r\n                                    {profile !== null ? profile.email : null}\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                </List>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Link\r\n                    to={profile !== null ? `/updateprofile/${profile.id}` : null}\r\n                    style={{ textDecoration: 'none', color: 'black' }}\r\n                    className={classes.updateProfileBtn}\r\n                >\r\n                    <Button\r\n                        endIcon={<SettingsIcon />}\r\n                        style={{ color: \"#BFBFBF\" }}\r\n                    >\r\n                        Update profile\r\n                    </Button>\r\n                </Link>\r\n            </CardActions>\r\n        </Card >\r\n    )\r\n}\r\n",["149","150"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\pages\\ProfilePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\SearchKeebInput\\index.js",["151","152"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\Footer\\index.js",["153"],"C:\\Users\\JaeShin\\code\\personal\\mykeebs\\mykeebs-react\\src\\components\\LoadingCircle\\index.js",[],{"ruleId":"154","severity":1,"message":"155","line":25,"column":8,"nodeType":"156","endLine":25,"endColumn":10,"suggestions":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":7,"column":8,"nodeType":"164","messageId":"165","endLine":7,"endColumn":21},{"ruleId":"162","severity":1,"message":"166","line":12,"column":116,"nodeType":"164","messageId":"165","endLine":12,"endColumn":126},{"ruleId":"154","severity":1,"message":"167","line":66,"column":8,"nodeType":"156","endLine":66,"endColumn":10,"suggestions":"168"},{"ruleId":"162","severity":1,"message":"169","line":11,"column":10,"nodeType":"164","messageId":"165","endLine":11,"endColumn":18},{"ruleId":"154","severity":1,"message":"170","line":47,"column":8,"nodeType":"156","endLine":47,"endColumn":10,"suggestions":"171"},{"ruleId":"158","replacedBy":"172"},{"ruleId":"160","replacedBy":"173"},{"ruleId":"162","severity":1,"message":"174","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":15},{"ruleId":"162","severity":1,"message":"175","line":7,"column":10,"nodeType":"164","messageId":"165","endLine":7,"endColumn":19},{"ruleId":"158","replacedBy":"176"},{"ruleId":"160","replacedBy":"177"},{"ruleId":"162","severity":1,"message":"178","line":2,"column":17,"nodeType":"164","messageId":"165","endLine":2,"endColumn":25},{"ruleId":"162","severity":1,"message":"179","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":11},{"ruleId":"162","severity":1,"message":"180","line":6,"column":25,"nodeType":"164","messageId":"165","endLine":6,"endColumn":30},{"ruleId":"162","severity":1,"message":"166","line":6,"column":32,"nodeType":"164","messageId":"165","endLine":6,"endColumn":42},{"ruleId":"181","severity":1,"message":"182","line":69,"column":29,"nodeType":"183","endLine":69,"endColumn":98},{"ruleId":"154","severity":1,"message":"167","line":32,"column":8,"nodeType":"156","endLine":32,"endColumn":10,"suggestions":"184"},{"ruleId":"154","severity":1,"message":"185","line":40,"column":8,"nodeType":"156","endLine":40,"endColumn":10,"suggestions":"186"},{"ruleId":"154","severity":1,"message":"167","line":36,"column":8,"nodeType":"156","endLine":36,"endColumn":10,"suggestions":"187"},{"ruleId":"158","replacedBy":"188"},{"ruleId":"160","replacedBy":"189"},{"ruleId":"162","severity":1,"message":"190","line":35,"column":12,"nodeType":"164","messageId":"165","endLine":35,"endColumn":16},{"ruleId":"162","severity":1,"message":"191","line":39,"column":12,"nodeType":"164","messageId":"165","endLine":39,"endColumn":23},{"ruleId":"192","severity":1,"message":"193","line":12,"column":17,"nodeType":"194","endLine":12,"endColumn":32},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchKeebData' and 'profileData'. Either include them or remove the dependency array.","ArrayExpression",["195"],"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'LoadingCircle' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'profileData'. Either include it or remove the dependency array.",["198"],"'Snackbar' is defined but never used.","React Hook useEffect has missing dependencies: 'loadKeeb' and 'profileData'. Either include them or remove the dependency array.",["199"],["196"],["197"],"'AddIcon' is defined but never used.","'Container' is defined but never used.",["196"],["197"],"'useState' is defined but never used.","'API' is defined but never used.","'Paper' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["200"],"React Hook useEffect has missing dependencies: 'getKeebName' and 'profileData'. Either include them or remove the dependency array.",["201"],["202"],["196"],["197"],"'list' is assigned a value but never used.","'searchState' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"desc":"203","fix":"204"},"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"205","fix":"209"},{"desc":"210","fix":"211"},{"desc":"205","fix":"212"},"Update the dependencies array to be: [fetchKeebData, profileData]",{"range":"213","text":"214"},"Update the dependencies array to be: [profileData]",{"range":"215","text":"216"},"Update the dependencies array to be: [loadKeeb, profileData]",{"range":"217","text":"218"},{"range":"219","text":"216"},"Update the dependencies array to be: [getKeebName, profileData]",{"range":"220","text":"221"},{"range":"222","text":"216"},[716,718],"[fetchKeebData, profileData]",[1807,1809],"[profileData]",[1226,1228],"[loadKeeb, profileData]",[806,808],[1065,1067],"[getKeebName, profileData]",[1136,1138]]